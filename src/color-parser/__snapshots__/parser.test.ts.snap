// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Color Parser HSLA clamps alpha values between either 0 and 1 or 0% and 100% 1`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 0,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA clamps alpha values between either 0 and 1 or 0% and 100% 2`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA clamps alpha values between either 0 and 1 or 0% and 100% 3`] = `
Object {
  "alpha": Object {
    "alpha": 0,
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA clamps alpha values between either 0 and 1 or 0% and 100% 4`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA clamps lightness between 0% and 100% 1`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA clamps lightness between 0% and 100% 2`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA clamps saturation between 0% and 100% 1`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA clamps saturation between 0% and 100% 2`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 1`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "hue": 0,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 2`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 3`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "hue": 0,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 4`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 5`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "hue": 0,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 6`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 7`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "hue": 0,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 8`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 9`] = `
Object {
  "alpha": Object {
    "alpha": 0.5,
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA parses hsla values without an alpha value 10`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 50,
      "stringify": [Function],
    },
  },
  "hue": 90,
  "lightness": Object {
    "percentage": 100,
    "stringify": [Function],
  },
  "saturation": Object {
    "percentage": 0,
    "stringify": [Function],
  },
  "tag": "hsla",
}
`;

exports[`Color Parser HSLA produces parse errors for missing hue, saturation & ligthness values 1`] = `
Object {
  "message": "hsla() seems to be a malformed hsla() value",
  "token": "hsla()",
}
`;

exports[`Color Parser HSLA produces parse errors when alpha is neither a number nor percentage 1`] = `
Object {
  "message": "The alpha value(fourth argument) in hsla() should be either a  number or a percentage",
  "token": "hsla(90, 0%, 100%, hex)",
}
`;

exports[`Color Parser HSLA produces parse errors when hue value is not a number 1`] = `
Object {
  "message": "In hsla() the hue (first argument) should be a number",
  "token": "hsla(0%, 0%, 100%, 100%)",
}
`;

exports[`Color Parser HSLA produces parse errors when lightness is not a percentage 1`] = `
Object {
  "message": "In hsla() the ligthness (third argument) should always be a percentage",
  "token": "hsla(90, 0%, 100, 100%)",
}
`;

exports[`Color Parser HSLA produces parse errors when saturation is not a percentage 1`] = `
Object {
  "message": "In hsla() the saturation (second argument) should always be a percentage",
  "token": "hsla(90, 0, 100%, 100%)",
}
`;

exports[`Color Parser Hex colors parses hex values corresponding to every named color keyword 1`] = `
"{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F0F8FF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FAEBD7\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00FFFF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#7FFFD4\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F0FFFF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F5F5DC\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFE4C4\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#000000\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFEBCD\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#0000FF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#8A2BE2\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#A52A2A\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#DEB887\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#5F9EA0\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#7FFF00\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#D2691E\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF7F50\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#6495ED\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFF8DC\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#DC143C\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00FFFF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00008B\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#008B8B\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#B8860B\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#A9A9A9\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#006400\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#A9A9A9\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#BDB76B\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#8B008B\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#556B2F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF8C00\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#9932CC\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#8B0000\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#E9967A\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#8FBC8F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#483D8B\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#2F4F4F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#2F4F4F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00CED1\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#9400D3\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF1493\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00BFFF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#696969\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#696969\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#1E90FF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#B22222\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFFAF0\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#228B22\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF00FF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#DCDCDC\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F8F8FF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFD700\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#DAA520\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#808080\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#008000\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#ADFF2F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#808080\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F0FFF0\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF69B4\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#CD5C5C\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#4B0082\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFFFF0\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F0E68C\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#E6E6FA\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFF0F5\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#7CFC00\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFFACD\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#ADD8E6\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F08080\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#E0FFFF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FAFAD2\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#D3D3D3\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#90EE90\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#D3D3D3\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFB6C1\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFA07A\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#20B2AA\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#87CEFA\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#778899\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#778899\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#B0C4DE\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFFFE0\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00FF00\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#32CD32\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FAF0E6\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF00FF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#800000\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#66CDAA\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#0000CD\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#BA55D3\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#9370DB\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#3CB371\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#7B68EE\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00FA9A\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#48D1CC\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#C71585\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#191970\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F5FFFA\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFE4E1\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFE4B5\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFDEAD\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#000080\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FDF5E6\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#808000\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#6B8E23\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFA500\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF4500\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#DA70D6\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#EEE8AA\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#98FB98\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#AFEEEE\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#DB7093\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFEFD5\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFDAB9\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#CD853F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFC0CB\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#DDA0DD\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#B0E0E6\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#800080\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#663399\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF0000\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#BC8F8F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#4169E1\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#8B4513\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FA8072\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F4A460\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#2E8B57\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFF5EE\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#A0522D\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#C0C0C0\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#87CEEB\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#6A5ACD\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#708090\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#708090\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFFAFA\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#00FF7F\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#4682B4\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#D2B48C\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#008080\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#D8BFD8\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FF6347\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#40E0D0\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#EE82EE\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F5DEB3\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFFFFF\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#F5F5F5\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#FFFF00\\"}
{\\"tag\\":\\"hex-color\\",\\"value\\":\\"#9ACD32\\"}"
`;

exports[`Color Parser Hex colors parses hex values of size 8, 6, 4 & 3 1`] = `
Object {
  "tag": "hex-color",
  "value": "#4682B4FF",
}
`;

exports[`Color Parser Hex colors parses hex values of size 8, 6, 4 & 3 2`] = `
Object {
  "tag": "hex-color",
  "value": "#4682B4",
}
`;

exports[`Color Parser Hex colors parses hex values of size 8, 6, 4 & 3 3`] = `
Object {
  "tag": "hex-color",
  "value": "#4682",
}
`;

exports[`Color Parser Hex colors parses hex values of size 8, 6, 4 & 3 4`] = `
Object {
  "tag": "hex-color",
  "value": "#468",
}
`;

exports[`Color Parser Hex colors produces a parse error for invalid hex values 1`] = `
Object {
  "message": "#46:  is not a supported color format.
The supported formats are: hex, named  color keywords, rgb(), rgba(), hsl() and hsla().",
  "token": "#46",
}
`;

exports[`Color Parser Hex colors produces a parse error for invalid hex values 2`] = `
Object {
  "message": "#4682B4FF00:  is not a supported color format.
The supported formats are: hex, named  color keywords, rgb(), rgba(), hsl() and hsla().",
  "token": "#4682B4FF00",
}
`;

exports[`Color Parser Hex colors produces a parse error for invalid hex values 3`] = `
Object {
  "message": "#xyz:  is not a supported color format.
The supported formats are: hex, named  color keywords, rgb(), rgba(), hsl() and hsla().",
  "token": "#xyz",
}
`;

exports[`Color Parser Named color keywords parses every named color keyword 1`] = `
"{\\"tag\\":\\"named-color\\",\\"value\\":\\"aliceblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"antiquewhite\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"aqua\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"aquamarine\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"azure\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"beige\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"bisque\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"black\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"blanchedalmond\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"blue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"blueviolet\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"brown\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"burlywood\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"cadetblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"chartreuse\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"chocolate\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"coral\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"cornflowerblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"cornsilk\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"crimson\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"cyan\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkcyan\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkgoldenrod\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkgray\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkgreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkgrey\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkkhaki\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkmagenta\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkolivegreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkorange\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkorchid\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkred\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darksalmon\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkseagreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkslateblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkslategray\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkslategrey\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkturquoise\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"darkviolet\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"deeppink\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"deepskyblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"dimgray\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"dimgrey\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"dodgerblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"firebrick\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"floralwhite\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"forestgreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"fuchsia\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"gainsboro\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"ghostwhite\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"gold\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"goldenrod\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"gray\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"green\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"greenyellow\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"grey\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"honeydew\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"hotpink\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"indianred\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"indigo\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"ivory\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"khaki\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lavender\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lavenderblush\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lawngreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lemonchiffon\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightcoral\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightcyan\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightgoldenrodyellow\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightgray\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightgreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightgrey\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightpink\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightsalmon\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightseagreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightskyblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightslategray\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightslategrey\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightsteelblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lightyellow\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"lime\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"limegreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"linen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"magenta\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"maroon\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumaquamarine\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumorchid\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumpurple\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumseagreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumslateblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumspringgreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumturquoise\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mediumvioletred\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"midnightblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mintcream\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"mistyrose\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"moccasin\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"navajowhite\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"navy\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"oldlace\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"olive\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"olivedrab\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"orange\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"orangered\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"orchid\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"palegoldenrod\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"palegreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"paleturquoise\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"palevioletred\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"papayawhip\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"peachpuff\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"peru\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"pink\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"plum\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"powderblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"purple\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"rebeccapurple\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"red\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"rosybrown\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"royalblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"saddlebrown\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"salmon\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"sandybrown\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"seagreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"seashell\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"sienna\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"silver\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"skyblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"slateblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"slategray\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"slategrey\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"snow\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"springgreen\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"steelblue\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"tan\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"teal\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"thistle\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"tomato\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"turquoise\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"violet\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"wheat\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"white\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"whitesmoke\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"yellow\\"}
{\\"tag\\":\\"named-color\\",\\"value\\":\\"yellowgreen\\"}"
`;

exports[`Color Parser Named color keywords produces a parse error for non-existent color keywords 1`] = `
Object {
  "message": "notarealcolorkeyword:  is not a supported color format.
The supported formats are: hex, named  color keywords, rgb(), rgba(), hsl() and hsla().",
  "token": "notarealcolorkeyword",
}
`;

exports[`Color Parser RGBA parsed rgba channel values are clamped between 0 and 255 1`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    0,
    0,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parsed rgba channel values are clamped between 0 and 255 2`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    255,
    255,
    255,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parsed rgba channel values are clamped between 0 and 255 3`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parsed rgba channel values are clamped between 0 and 255 4`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba alpha values are clamped between 0 and 1 1`] = `
Object {
  "alpha": Object {
    "alpha": 0,
  },
  "channels": Array [
    0,
    0,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba alpha values are clamped between 0 and 1 2`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    0,
    0,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba alpha values are clamped between 0 and 1 3`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 0,
      "stringify": [Function],
    },
  },
  "channels": Array [
    0,
    0,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba alpha values are clamped between 0 and 1 4`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "channels": Array [
    0,
    0,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values with an alpha value 1`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    0,
    255,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values with an alpha value 2`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "channels": Array [
    0,
    255,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values with an alpha value 3`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values with an alpha value 4`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 100,
      "stringify": [Function],
    },
  },
  "channels": Array [
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values with an alpha value 5`] = `
Object {
  "alpha": Object {
    "alpha": Object {
      "percentage": 50,
      "stringify": [Function],
    },
  },
  "channels": Array [
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values with an alpha value 6`] = `
Object {
  "alpha": Object {
    "alpha": 0.5,
  },
  "channels": Array [
    0,
    255,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values without an alpha value 1`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    0,
    255,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values without an alpha value 2`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    0,
    255,
    0,
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values without an alpha value 3`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA parses rgba values without an alpha value 4`] = `
Object {
  "alpha": Object {
    "alpha": 1,
  },
  "channels": Array [
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
    Object {
      "percentage": 100,
      "stringify": [Function],
    },
    Object {
      "percentage": 0,
      "stringify": [Function],
    },
  ],
  "tag": "rgba",
}
`;

exports[`Color Parser RGBA produces parse errors for missing rgba channel values 1`] = `
Object {
  "message": "rgba() seems to be a malformed rgba() value",
  "token": "rgba()",
}
`;

exports[`Color Parser RGBA produces parse errors for rgba with incorrect number of arguments 1`] = `
Object {
  "message": "rgba(0%, 100, 0%, 100%, 1) seems to be an rgba() value. It should have exactly three arguments to specify the red, green & blue channels of the color respectively. A final optional argument specifies the alpha of the color.",
  "token": "rgba(0%, 100, 0%, 100%, 1)",
}
`;

exports[`Color Parser RGBA produces parse errors for rgba with incorrect number of arguments 2`] = `
Object {
  "message": "rgba(100%, 1) seems to be an rgba() value. It should have exactly three arguments to specify the red, green & blue channels of the color respectively. A final optional argument specifies the alpha of the color.",
  "token": "rgba(100%, 1)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba alpha value 1`] = `
Object {
  "message": "The alpha value(fourth argument) in rgba() should be either a  number or a percentage",
  "token": "rgba(0%, 100%, 0%, abc)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba alpha value 2`] = `
Object {
  "message": "The alpha value(fourth argument) in rgba() should be either a  number or a percentage",
  "token": "rgba(0%, 100%, 0%, abc)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba channel values 1`] = `
Object {
  "message": "The red, green & blue channels of the color should be either all  numbers or all percentages.",
  "token": "rgba(0, 255%, 0)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba channel values 2`] = `
Object {
  "message": "The red, green & blue channels of the color should be either all  numbers or all percentages.",
  "token": "rgba(0%, 100, 0%)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba channel values 3`] = `
Object {
  "message": "The red, green & blue channels of the color should be either all  numbers or all percentages.",
  "token": "rgba(0, 255%, 0, 100%)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba channel values 4`] = `
Object {
  "message": "The red, green & blue channels of the color should be either all  numbers or all percentages.",
  "token": "rgba(0%, 100, 0%, 100%)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba channel values 5`] = `
Object {
  "message": "The red, green & blue channels of the color should be either all  numbers or all percentages.",
  "token": "rgba(0, 255%, 0, abc)",
}
`;

exports[`Color Parser RGBA produces parse errors for wrongly typed rgba channel values 6`] = `
Object {
  "message": "The red, green & blue channels of the color should be either all  numbers or all percentages.",
  "token": "rgba(0%, 100, 0%, abc)",
}
`;
